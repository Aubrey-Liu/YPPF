# This workflow will install Python dependencies, run tests with a variety of Python versions
# For more information see: 
#   https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

# Workflow's name
name: build

# Workflow's trigger
on:
  push:
    branches: [ test_action ]
  pull_request:
    branches: [ test_action ]

# Workflow's jobs
jobs:
  # job's id
  build:
    # job's name
    name: build and check

    # the type of machine to run the job on
    runs-on: ${{ matrix.os }}

    # create a build matrix for jobs
    strategy:
      matrix:
        python-version: ["3.8"]
        os: [ubuntu-latest]

    # create services
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: password
          MYSQL_DATABASE: test
        ports:
          - 3306:3306
        options: >
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    timeout-minutes: 5

    # create steps
    steps:
      # step1: check out repository
      - name: Check out git repository
        uses: actions/checkout@v3

      # step2: install Python
      - name: Install Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      # step3: install dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # step4: copy json config
      - name: Configure local json
        run: >
          cat local_json_template.json |
          sed 's/\$DATABASE\$/test/g' |
          sed 's/\$USER\$/root/g' |
          sed 's/\$PASSWORD\$/testpw/g' >
          local_json.json
            cat local_json.json

      # step4: shutdown default database if exist
      - name: shutdown MySQL
        run:  sudo service mysql stop
        continue-on-error: true

      # step5: build MySQL
      - name: Setup MySQL
        uses: mirromutth/mysql-action@v1.1
        with:
          host port: 3306 # Optional, default value is 3306. The port of host
          container port: 3306 # Optional, default value is 3306. The port of container

          character set server: 'utf8mb4' # Optional, default value is 'utf8mb4'.
          collation server: 'utf8mb4_general_ci' # Optional, default value is 'utf8mb4_general_ci'.
          
          mysql version: '5.7' # Optional, default value is "latest". The version of the MySQL
          mysql database: 'test' # Optional, default value is "test". The specified database which will be create
          # mysql root password: '' # Required if "mysql user" is empty, default is empty. The root superuser password
          mysql user: 'root' # Required if "mysql root password" is empty, default is empty. The superuser for the specified database. Can use secrets, too
          mysql password: 'testpw' # Required if "mysql user" exists. The password for the "mysql user"

      # step5-b: wait MySQL to start
      - name: Wait for MySQL
        run: |
          while ! mysqladmin ping --host=127.0.0.1 --password=testpw --silent; do
            sleep 1
          done
        timeout-minutes: 1

      # step6: build database
      - name: Build database
        run: |
          python manage.py makemigrations 
          python manage.py migrate
        continue-on-error: true

      # step7: testing
      - name: Run Django
        run: |
          timeout 15 python manage.py runserver
